name: Code Quality Checks, Tests, and Push Tags

on:
    pull_request:
        types: [opened, synchronize]
    push:
        branches:
            - main
    workflow_dispatch:

jobs:
    check-version-txt:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: Tag with the release version
          run: |
            git tag $(cat version.txt)

    lint-format-and-static-code-checks:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4
            - name: Setup Python 3.8
              uses: actions/setup-python@v5
              with:
                python-version: 3.8
                cache: 'pip' # caching pip dependencies
            - name: Install pre-commit
              run: pip install pre-commit
            - name: Lint, Format, and Static Code Quality Checks
              run: |
                /bin/bash -x run.sh lint:ci

    execute-tests:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4
            - name: Setup Python 3.8
              uses: actions/setup-python@v5
              with:
                python-version: 3.8
            - name: Cache Python dependencies
              uses: actions/cache@v4
              with:
                path: ~/.cache/pip
                key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
                restore-keys: |
                  ${{ runner.os }}-pip-
            - name: Install test dependencies
              run: make install
            - name: Set up Git
              run: |
                git config --global user.email "avr13405@gmail.com"
                git config --global user.name "Amit Vikram Raj"
            - name: Run tests
              run: make test
    push-tags:
      needs:
        - execute-tests
        - lint-format-and-static-code-checks
        - check-version-txt
      runs-on: ubuntu-latest
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      steps:
        - uses: actions/checkout@v4
        - name: Push Tags
          run: |
            git tag $(cat version.txt)
            git push origin --tags

    # https://docs.github.com/en/actions/learn-github-actions/contexts#example-printing-context-information-to-the-log
    dump-contexts-to-log:
      runs-on: ubuntu-latest
      steps:
        - name: Dump GitHub context
          id: github_context_step
          run: echo '{% raw %}${{ toJSON(github) }}'{% endraw %}
        - name: Dump job context
          run: echo '{% raw %}${{ toJSON(job) }}'{% endraw %}
        - name: Dump steps context
          run: echo '{% raw %}${{ toJSON(steps) }}'{% endraw %}
        - name: Dump runner context
          run: echo '{% raw %}${{ toJSON(runner) }}'{% endraw %}
        - name: Dump strategy context
          run: echo '{% raw %}${{ toJSON(strategy) }}'{% endraw %}
        - name: Dump matrix context
          run: echo '{% raw %}${{ toJSON(matrix) }}'{% endraw %}
        - name: Dump secrets
          run: echo '{% raw %}${{ toJSON(secrets) }}'{% endraw %}
        - name: Dump vars
          run: echo '{% raw %}${{ toJSON(vars) }}'{% endraw %}
